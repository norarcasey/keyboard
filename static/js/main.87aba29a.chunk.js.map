{"version":3,"sources":["contexts/capture-context/reducer.ts","components/keyboard/reducer.ts","contexts/capture-context/index.tsx","components/key/index.tsx","contexts/octave-context/index.tsx","components/keyboard/index.tsx","components/play-back-controls/axel-f.ts","components/play-back-controls/index.tsx","components/play-back-display/index.tsx","components/octave-control/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ActionName","reducer","state","action","type","AddPlaybackNote","payload","ClearPlaybackNotes","CaptureContext","createContext","CaptureProvider","Consumer","props","captureStartTime","useRef","useReducer","playbackNotes","dispatch","handleCaptureNote","useCallback","playbackNote","now","Date","getTime","current","time","calculateTimeDiff","toBarsBeatsSixteenths","useEffect","length","timeToDiff","Tone","Time","Provider","value","captureNote","calculateDuration","keyPressedDateTime","toNotation","calculateTime","clearCaptureData","children","OverwriteKeyPressData","keyPressed","keyData","Key","captureContext","useContext","useState","setKeyPressDateTime","Synth","toMaster","synth","color","keyboardKey","note","style","handleKeyPress","triggerAttack","handleKeyRelease","triggerRelease","dur","isMobile","className","onTouchStart","onTouchEnd","onMouseDown","onMouseUp","OctaveContext","OctaveProvider","octave","formatKeyOctave","key","index","Math","floor","setOctave","newOctave","Keyboard","octaveContext","keysPressed","keys","left","noteLookup","find","indexOf","keyDown","e","get","kpObj","isPressed","startTime","handleKeyDown","toString","document","addEventListener","keyUpFunc","handleKeyUp","window","removeEventListener","map","k","i","AxelF","PlayBackControls","isPlaying","setIsPlaying","part","setPart","playback","setPlayback","lastNote","setLastNote","start","Transport","scheduleOnce","removeAll","toggle","toSeconds","onClick","title","size","icon","faStop","Part","event","triggerAttackRelease","faPlay","faBan","PlayBackDisplay","pbn","OctaveControl","defaultValue","min","max","onChange","Number","parseInt","required","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yMAAYA,E,wDAUG,SAASC,EAAQC,EAAYC,GAC1C,OAAQA,EAAOC,MACb,KAAKJ,EAAWK,gBACd,MAAM,GAAN,mBAAWH,GAAX,CAAkBC,EAAOG,UAC3B,KAAKN,EAAWO,mBACd,MAAO,GACT,QACE,OAAO,YAAIL,K,SAjBLF,K,kCAAAA,E,yCAAAA,M,SCEAA,E,gBCkBCQ,EAAiBC,wBAAc,IAG/BC,GAFkBF,EAAeG,SAEY,SAAAC,GAGxD,IAAMC,EAAmBC,iBAAO,GAHiC,EAI/BC,qBAAWd,EAAS,IAJW,mBAI1De,EAJ0D,KAI3CC,EAJ2C,KAM3DC,EAAoBC,uBACxB,SAACC,GACC,IAAMC,GAAM,IAAIC,MAAOC,UAAY,IACF,IAA7BV,EAAiBW,UACnBX,EAAiBW,QAAUH,GAE7BD,EAAaK,KAAOC,EAAkBL,GAAKM,wBAE3CV,EAAS,CAAEb,KAAMJ,EAAWK,gBAAiBC,QAASc,MAExD,CAACP,IAGHe,qBAAU,WACR,GAA6B,IAAzBZ,EAAca,OAAc,CAC9B,IAAMR,GAAM,IAAIC,MAAOC,UAAY,IACnCV,EAAiBW,QAAUH,KAE5B,CAACL,IAEJ,IAAMU,EAAoB,SAACI,GACzB,OAAOC,IAAKC,KAAKF,EAAajB,EAAiBW,UAejD,OACE,kBAAChB,EAAeyB,SAAhB,CACEC,MAAO,CACLC,YAAajB,EACbkB,kBAZoB,SAACC,GACzB,OAAON,IAAKC,OAAM,IAAIV,MAAOC,UAAYc,GAAsB,KAAMC,cAYjEC,cATgB,SAACF,GACrB,OAAON,IAAKC,KAAKK,EAAqBxB,EAAiBW,SAASG,yBAS5Dd,iBAAkBA,EAAiBW,QACnCgB,iBAnBmB,WACvBvB,EAAS,CAAEb,KAAMJ,EAAWO,mBAAoBD,QAAS,MAmBrDU,kBAGDJ,EAAM6B,YD5DE,SAASxC,EAAQC,EAAYC,GAC1C,OAAQA,EAAOC,MACb,KAAKJ,EAAW0C,sBAAhB,IACUpC,EAAYH,EAAZG,QAER,OADAJ,EAAMI,EAAQqC,YAAcrC,EAAQsC,QAC7B1C,EACT,QACE,OAAOA,I,SArBDF,K,+CAAAA,M,iBEiDG6C,G,MApCY,SAAAjC,GACzB,IAAMkC,EAAkCC,qBAAWvC,GADjB,EAEgBwC,qBAFhB,mBAE3BX,EAF2B,KAEPY,EAFO,OAGlBD,oBAAS,IAAIjB,IAAKmB,OAAQC,YAAnCC,EAH2B,oBAI1BC,EAAoCzC,EAApCyC,MAAOC,EAA6B1C,EAA7B0C,YAAaC,EAAgB3C,EAAhB2C,KAAMC,EAAU5C,EAAV4C,MAE5BC,EAAiB,WACrBL,EAAMM,cAAcH,GAEpB,IAAMlC,GAAM,IAAIC,MAAOC,UACvB0B,EAAoB5B,IAGhBsC,EAAmB,WACvBP,EAAMQ,iBAEN,IAAMC,EAAMf,EAAeV,kBAAkBC,GACvCF,EAA6B,CAAEoB,OAAMM,OAC3Cf,EAAeX,YAAYA,IAG7B,OAAO2B,WACL,yBAAKC,UAAS,cAASV,GAASG,MAAOA,EAAOQ,aAAcP,EAAgBQ,WAAYN,GACtF,yBAAKI,UAAU,aACZR,EADH,IACUD,EADV,MAKF,yBAAKS,UAAS,cAASV,GAASG,MAAOA,EAAOU,YAAaT,EAAgBU,UAAWR,GACpF,yBAAKI,UAAU,aACZR,EADH,IACUD,EADV,Q,yBCpCOc,EAAgB3D,wBAAc,IAE9B4D,EAA2C,SAAAzD,GACtD,IAAM0D,EAASxD,iBAAO,GAUtB,OAAO,kBAACsD,EAAcnC,SAAf,CAAwBC,MAAO,CAAEqC,gBAJhB,SAACC,EAAaC,GACpC,MAAM,GAAN,OAAUD,GAAV,OAAgBF,EAAO9C,QAAUkD,KAAKC,MAAMF,EAAQ,MAGGH,OAAQA,EAAO9C,QAASoD,UAR/D,SAACC,GACjBP,EAAO9C,QAAUqD,KAO4EjE,EAAM6B,WCuGxFqC,EAlGsB,SAAAlE,GACnC,IAAMkC,EAAkCC,qBAAWvC,GAC7CuE,EAAgChC,qBAAWqB,GAFL,EAGZrD,qBAAWd,EAAS,IAHR,mBAGrC+E,EAHqC,KAGxB/D,EAHwB,KAKtCgE,EAAe,CACnB,CAAET,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,KAAMlB,YAAa,IAAKD,MAAO,QAASG,MAAO,CAAE0B,KAAM,SAC9D,CAAEV,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,KAAMlB,YAAa,IAAKD,MAAO,QAASG,MAAO,CAAE0B,KAAM,UAC9D,CAAEV,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,KAAMlB,YAAa,IAAKD,MAAO,QAASG,MAAO,CAAE0B,KAAM,UAC9D,CAAEV,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,KAAMlB,YAAa,IAAKD,MAAO,QAASG,MAAO,CAAE0B,KAAM,UAC9D,CAAEV,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,KAAMlB,YAAa,IAAKD,MAAO,QAASG,MAAO,CAAE0B,KAAM,UAC9D,CAAEV,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,KAAMlB,YAAa,IAAKD,MAAO,QAASG,MAAO,CAAE0B,KAAM,UAC9D,CAAEV,IAAK,IAAKlB,YAAa,KACzB,CAAEkB,IAAK,KAAMlB,YAAa,IAAKD,MAAO,QAASG,MAAO,CAAE0B,KAAM,WAC9D,CAAEV,IAAK,IAAKlB,YAAa,MA4D3B,OAzDA1B,qBAAU,WACR,IAAMuD,EAAa,SAACxC,GAClB,IAAM6B,EAAMS,EAAKG,MAAK,SAAAZ,GACpB,OAAIA,EAAIlB,cAAgBX,EACf6B,EAEA,QAIX,OAAIA,EACKO,EAAcR,gBAAgBC,EAAIA,IAAKS,EAAKI,QAAQb,IAGtD,MA+BHc,EAAU,SAACC,GAAD,OA5BM,SAAC5C,GACrB,IAAMY,EAAO4B,EAAWxC,GAExB,GAAIY,IAASiC,IAAKR,EAAoBrC,GAAa,aAAa,GAAQ,CACtE,IAAM8C,EAAsBT,EAAoBrC,IAAe,GAC/D8C,EAAMC,WAAY,EAClBD,EAAMrC,MAAQqC,EAAMrC,QAAS,IAAIrB,IAAKmB,OAAQC,WAC9CsC,EAAME,WAAY,IAAIrE,MAAOC,UAC7BkE,EAAMrC,MAAMM,cAAcH,GAC1BtC,EAAS,CAAEb,KAAMJ,EAAW0C,sBAAuBpC,QAAS,CAAEqC,aAAYC,QAAS6C,MAmB3DG,CAAcL,EAAEf,IAAIqB,aAChDC,SAASC,iBAAiB,UAAWT,GAAS,GAE9C,IAAMU,EAAY,SAACT,GAAD,OAlBE,SAAC5C,GACnB,IAAMY,EAAO4B,EAAWxC,GAExB,GAAIY,GAAQiC,IAAKR,EAAoBrC,GAAa,aAAa,GAAQ,CACrE,IAAM8C,EAAsBT,EAAoBrC,GAEhD8C,EAAMrC,MAAMQ,iBACZ6B,EAAMC,WAAY,EAElB,IACMtE,EAA8B,CAAEmC,OAAMM,IADhCf,EAAeV,kBAAkBqD,EAAME,YAEnD7C,EAAeX,YAAYf,IAOD6E,CAAYV,EAAEf,IAAIqB,aAGhD,OAFAC,SAASC,iBAAiB,QAASC,GAAW,GAEvC,WACLE,OAAOC,oBAAoB,UAAWb,GACtCY,OAAOC,oBAAoB,QAASH,MAErC,CAAClD,EAAgBkC,EAAaD,EAAeE,IAG9C,yBAAKlB,UAAU,YACZkB,EAAKmB,KAAI,SAACC,EAAGC,GAAJ,OACR,kBAAC,EAAD,CACE9B,IAAG,UAAK6B,EAAE7B,KAAP,OAAa8B,GAChBhC,OAAQS,EAAcT,OACtBf,KAAMwB,EAAcR,gBAAgB8B,EAAE7B,IAAK8B,GAC3ChD,YAAa+C,EAAE/C,YACfD,MAAOgD,EAAEhD,MACTG,MAAO6C,EAAE7C,a,gBCOJ+C,EAzHM,CAEnB,CACE9E,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,OAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,OAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAGP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,OAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,OAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,MACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAGP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,OAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,OAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,MAEP,CACEpC,KAAMM,IAAKC,KAAK,SAChBuB,KAAM,KACNM,IAAK,UC9BM2C,G,OA/EiC,SAAA5F,GAC9C,IAAMkC,EAAkCC,qBAAWvC,GADI,EAErBwC,qBAFqB,mBAEhDyD,EAFgD,KAErCC,EAFqC,OAG/B1D,qBAH+B,mBAGhD2D,EAHgD,KAG1CC,EAH0C,OAIvB5D,mBAASuD,GAJc,mBAIhDM,EAJgD,KAItCC,EAJsC,OAKvB9D,qBALuB,mBAKhD+D,EALgD,KAKtCC,EALsC,OAMvChE,oBAAS,IAAIjB,IAAKmB,OAAQC,YAAnCC,EANgD,oBAQvDxB,qBAAU,WACR,IAAMZ,EAAgB8B,EAAe9B,cAEjCA,EAAca,OAAS,GACzBmF,EAAYhG,EAAcA,EAAca,OAAS,IACjDiF,EAAYhE,EAAe9B,iBAE3BgG,EAAYT,EAAMA,EAAM1E,OAAS,IACjCiF,EAAYP,MAEb,CAACzD,EAAe9B,gBAEnBY,qBAAU,WACJ+E,GAAQA,EAAK9E,OAAS,IACxB8E,EAAKM,MAAM,GAEXlF,IAAKmF,UAAUC,cAAa,SAAS1F,GACnCkF,EAAKS,YACLrF,IAAKmF,UAAUG,SACfX,GAAa,KACZ3E,IAAKC,KAAK+E,EAAStF,MAAM6F,YAAcvF,IAAKC,KAAK+E,EAASlD,KAAKyD,aAElEvF,IAAKmF,UAAUG,SACfX,GAAa,MAEd,CAACC,EAAMI,IAuBV,OACE,yBAAKhD,UAAU,YACb,6BACG0C,EACC,yBAAKc,QAjBW,WACtBZ,EAAKS,YACLrF,IAAKmF,UAAUG,SACfX,GAAa,IAcwBc,MAAM,QACnC,kBAAC,IAAD,CAAiBC,KAAK,KAAKC,KAAMC,OAGnC,yBAAKJ,QA7BW,WACtBX,EACE,IAAI7E,IAAK6F,MAAK,SAASnG,EAAWoG,GAChCzE,EAAM0E,qBAAqBD,EAAMtE,KAAMsE,EAAMhE,IAAKpC,KACjDoF,KAyBgCW,MAAM,QACnC,kBAAC,IAAD,CAAiBC,KAAK,KAAKC,KAAMK,QAOvC,yBAAKhE,UAAU,QAAQyD,MAAM,QAAQD,QAvBT,WAC9BzE,EAAeN,mBACXmE,GAAQA,EAAK9E,OAAS,GACxB8E,EAAKS,cAqBH,kBAAC,IAAD,CAAiBK,KAAK,KAAKC,KAAMM,UCpD1BC,G,OA1B+B,SAAArH,GAC5C,IAAMkC,EAAkCC,qBAAWvC,GAEnD,OACE,yBAAKuD,UAAU,qBACb,yBAAKA,UAAU,UACb,0BAAMA,UAAU,eAAhB,QACA,0BAAMA,UAAU,mBAAhB,YACA,0BAAMA,UAAU,eAAhB,SAGF,yBAAKA,UAAU,aACb,yBAAKA,UAAU,oBACZjB,EAAe9B,cAAcoF,KAAI,SAAC8B,EAAK5B,GAAN,OAChC,yBAAK9B,IAAG,eAAU0D,EAAI3E,KAAd,YAAsB+C,GAAKvC,UAAU,QAC3C,0BAAMA,UAAU,aAAamE,EAAI3E,MACjC,0BAAMQ,UAAU,iBAAiBmE,EAAIrE,KACrC,0BAAME,UAAU,aAAamE,EAAIzG,e,QCKhC0G,G,cArBe,SAAAvH,GAC5B,IAAMmE,EAAgChC,qBAAWqB,GADZ,EAETpB,mBAAS,GAFA,mBAE9BsB,EAF8B,KAEtBM,EAFsB,KAarC,OACE,yBAAKb,UAAU,cACb,yCACA,kBAAC,IAAD,CAAaqE,aAAc,EAAGC,IAAK,EAAGC,IAAK,EAAGpG,MAAOoC,EAAQiE,SAZtC,SAACjE,GACtBkE,OAAOlE,IACTM,EAAUN,GACVS,EAAcH,UAAUN,IAExBM,EAAU6D,SAASnE,EAAOuB,WAAY,MAOqD6C,UAAU,OCG5FC,G,OAjBO,WACpB,OACE,yBAAK5E,UAAU,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACA,yBAAKA,UAAU,sBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,YCNQ6E,QACW,cAA7B1C,OAAO2C,SAASC,UAEe,UAA7B5C,OAAO2C,SAASC,UAEhB5C,OAAO2C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASnD,SAASoD,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.87aba29a.chunk.js","sourcesContent":["export enum ActionName {\n  AddPlaybackNote = 'AddPlaybackNote',\n  ClearPlaybackNotes = 'ClearPlaybackNotes'\n}\n\nexport interface Action {\n  type: string;\n  payload: object;\n}\n\nexport default function reducer(state: any, action: Action) {\n  switch (action.type) {\n    case ActionName.AddPlaybackNote:\n      return [...state, action.payload];\n    case ActionName.ClearPlaybackNotes:\n      return [];\n    default:\n      return [...state];\n  }\n}\n","import { IKeyPressed } from './';\n\nexport enum ActionName {\n  OverwriteKeyPressData = 'OverwriteKeyPressData'\n}\n\nexport interface Action {\n  type: string;\n  payload: Payload;\n}\n\nexport interface Payload {\n  keyPressed: string;\n  keyData: IKeyPressed;\n}\n\nexport default function reducer(state: any, action: Action) {\n  switch (action.type) {\n    case ActionName.OverwriteKeyPressData:\n      const { payload } = action;\n      state[payload.keyPressed] = payload.keyData;\n      return state;\n    default:\n      return state;\n  }\n}\n","import React, { createContext, FC, useCallback, useEffect, useReducer, useRef } from 'react';\nimport reducer, { ActionName } from './reducer';\n// @ts-ignore\nimport Tone from 'tone';\n\nexport interface ICaptureContext {\n  captureStartTime: number;\n  calculateDuration: any;\n  calculateTime: any;\n  playbackNotes: IPlaybackNote[];\n  captureNote(playbackNote: IPlaybackNote): void;\n  clearCaptureData(): void;\n}\nexport interface ICaptureProviderProps {}\nexport interface IPlaybackNote {\n  dur?: string;\n  note: string;\n  time?: any;\n}\n\nexport const CaptureContext = createContext({} as ICaptureContext);\nexport const CaptureConsumer = CaptureContext.Consumer;\n\nexport const CaptureProvider: FC<ICaptureProviderProps> = props => {\n  // useRef because eventhandlers\n  // https://stackoverflow.com/questions/53845595/wrong-react-hooks-behaviour-with-event-listener\n  const captureStartTime = useRef(0);\n  const [playbackNotes, dispatch] = useReducer(reducer, []);\n\n  const handleCaptureNote = useCallback(\n    (playbackNote: IPlaybackNote) => {\n      const now = new Date().getTime() / 1000;\n      if (captureStartTime.current === 0) {\n        captureStartTime.current = now;\n      }\n      playbackNote.time = calculateTimeDiff(now).toBarsBeatsSixteenths();\n\n      dispatch({ type: ActionName.AddPlaybackNote, payload: playbackNote });\n    },\n    [captureStartTime]\n  );\n\n  useEffect(() => {\n    if (playbackNotes.length === 1) {\n      const now = new Date().getTime() / 1000;\n      captureStartTime.current = now;\n    }\n  }, [playbackNotes]);\n\n  const calculateTimeDiff = (timeToDiff: number) => {\n    return Tone.Time(timeToDiff - captureStartTime.current);\n  };\n\n  const clearCaptureData = () => {\n    dispatch({ type: ActionName.ClearPlaybackNotes, payload: [] });\n  };\n\n  const calculateDuration = (keyPressedDateTime: number) => {\n    return Tone.Time((new Date().getTime() - keyPressedDateTime) / 1000).toNotation();\n  };\n\n  const calculateTime = (keyPressedDateTime: number) => {\n    return Tone.Time(keyPressedDateTime - captureStartTime.current).toBarsBeatsSixteenths();\n  };\n\n  return (\n    <CaptureContext.Provider\n      value={{\n        captureNote: handleCaptureNote,\n        calculateDuration,\n        calculateTime,\n        captureStartTime: captureStartTime.current,\n        clearCaptureData,\n        playbackNotes\n      }}\n    >\n      {props.children}\n    </CaptureContext.Provider>\n  );\n};\n","import React, { FC, useContext, useState } from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { CaptureContext, ICaptureContext, IPlaybackNote } from '../../contexts/capture-context';\n// @ts-ignore\nimport Tone from 'tone';\nimport './styles.css';\n\nexport interface IKeyProps {\n  note: string;\n  keyboardKey: string;\n  color?: string;\n  octave: number;\n  style?: object;\n}\n\nconst Key: FC<IKeyProps> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n  const [keyPressedDateTime, setKeyPressDateTime] = useState();\n  const [synth] = useState(new Tone.Synth().toMaster());\n  const { color, keyboardKey, note, style } = props;\n\n  const handleKeyPress = () => {\n    synth.triggerAttack(note);\n\n    const now = new Date().getTime();\n    setKeyPressDateTime(now);\n  };\n\n  const handleKeyRelease = () => {\n    synth.triggerRelease();\n\n    const dur = captureContext.calculateDuration(keyPressedDateTime);\n    const captureNote: IPlaybackNote = { note, dur };\n    captureContext.captureNote(captureNote);\n  };\n\n  return isMobile ? (\n    <div className={`key ${color}`} style={style} onTouchStart={handleKeyPress} onTouchEnd={handleKeyRelease}>\n      <div className=\"note-name\">\n        {note}({keyboardKey})\n      </div>\n    </div>\n  ) : (\n    <div className={`key ${color}`} style={style} onMouseDown={handleKeyPress} onMouseUp={handleKeyRelease}>\n      <div className=\"note-name\">\n        {note}({keyboardKey})\n      </div>\n    </div>\n  );\n};\n\nexport default Key;\n","import React, { createContext, FC, useRef } from 'react';\n\nexport interface IOctaveProviderProps {}\nexport interface IOctaveContext {\n  formatKeyOctave: (key: string, index: number) => string;\n  octave: number;\n  setOctave: (newOctave: number) => void;\n}\nexport const OctaveContext = createContext({} as IOctaveContext);\n\nexport const OctaveProvider: FC<IOctaveProviderProps> = props => {\n  const octave = useRef(4);\n\n  const setOctave = (newOctave: number) => {\n    octave.current = newOctave;\n  };\n\n  const formatKeyOctave = (key: string, index: number) => {\n    return `${key}${octave.current + Math.floor(index / 12)}`;\n  };\n\n  return <OctaveContext.Provider value={{ formatKeyOctave, octave: octave.current, setOctave }}>{props.children}</OctaveContext.Provider>;\n};\n","import React, { FC, useContext, useEffect, useReducer } from 'react';\nimport { CaptureContext, ICaptureContext, IPlaybackNote } from '../../contexts/capture-context';\nimport reducer, { ActionName, Payload } from './reducer';\nimport Key from '../key';\nimport './styles.css';\n\n// @ts-ignore\nimport get from 'lodash/get';\n// @ts-ignore\nimport Tone from 'tone';\nimport { IOctaveContext, OctaveContext } from '../../contexts/octave-context';\n\nexport interface IKeyboardProps {}\nexport interface IKey {\n  key: string;\n  keyboardKey: string;\n  color?: string;\n  style?: object;\n}\n\nexport interface IKeyPressed {\n  isPressed?: boolean;\n  startTime?: number;\n  synth: any;\n}\n\nconst Keyboard: FC<IKeyboardProps> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n  const octaveContext: IOctaveContext = useContext(OctaveContext);\n  const [keysPressed, dispatch] = useReducer(reducer, {});\n\n  const keys: IKey[] = [\n    { key: 'C', keyboardKey: 'a' },\n    { key: 'C#', keyboardKey: 'w', color: 'black', style: { left: '65px' } },\n    { key: 'D', keyboardKey: 's' },\n    { key: 'Eb', keyboardKey: 'e', color: 'black', style: { left: '200px' } },\n    { key: 'E', keyboardKey: 'd' },\n    { key: 'F', keyboardKey: 'f' },\n    { key: 'F#', keyboardKey: 't', color: 'black', style: { left: '432px' } },\n    { key: 'G', keyboardKey: 'g' },\n    { key: 'G#', keyboardKey: 'y', color: 'black', style: { left: '551px' } },\n    { key: 'A', keyboardKey: 'h' },\n    { key: 'Bb', keyboardKey: 'u', color: 'black', style: { left: '674px' } },\n    { key: 'B', keyboardKey: 'j' },\n    { key: 'C', keyboardKey: 'k' },\n    { key: 'C#', keyboardKey: 'i', color: 'black', style: { left: '909px' } },\n    { key: 'D', keyboardKey: 'l' },\n    { key: 'Eb', keyboardKey: 'o', color: 'black', style: { left: '1030px' } },\n    { key: 'E', keyboardKey: ';' }\n  ];\n\n  useEffect(() => {\n    const noteLookup = (keyPressed: string) => {\n      const key = keys.find(key => {\n        if (key.keyboardKey === keyPressed) {\n          return key;\n        } else {\n          return null;\n        }\n      });\n\n      if (key) {\n        return octaveContext.formatKeyOctave(key.key, keys.indexOf(key));\n      }\n\n      return null;\n    };\n\n    const handleKeyDown = (keyPressed: string) => {\n      const note = noteLookup(keyPressed);\n\n      if (note && !get((keysPressed as any)[keyPressed], 'isPressed', false)) {\n        const kpObj: IKeyPressed = (keysPressed as any)[keyPressed] || {};\n        kpObj.isPressed = true;\n        kpObj.synth = kpObj.synth || new Tone.Synth().toMaster();\n        kpObj.startTime = new Date().getTime();\n        kpObj.synth.triggerAttack(note);\n        dispatch({ type: ActionName.OverwriteKeyPressData, payload: { keyPressed, keyData: kpObj } as Payload });\n      }\n    };\n\n    const handleKeyUp = (keyPressed: string) => {\n      const note = noteLookup(keyPressed);\n\n      if (note && get((keysPressed as any)[keyPressed], 'isPressed', false)) {\n        const kpObj: IKeyPressed = (keysPressed as any)[keyPressed];\n\n        kpObj.synth.triggerRelease();\n        kpObj.isPressed = false;\n\n        const dur = captureContext.calculateDuration(kpObj.startTime);\n        const playbackNote: IPlaybackNote = { note, dur };\n        captureContext.captureNote(playbackNote);\n      }\n    };\n\n    const keyDown = (e: any) => handleKeyDown(e.key.toString());\n    document.addEventListener('keydown', keyDown, false);\n\n    const keyUpFunc = (e: any) => handleKeyUp(e.key.toString());\n    document.addEventListener('keyup', keyUpFunc, false);\n\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n      window.removeEventListener('keyup', keyUpFunc);\n    };\n  }, [captureContext, keysPressed, octaveContext, keys]);\n\n  return (\n    <div className=\"keyboard\">\n      {keys.map((k, i) => (\n        <Key\n          key={`${k.key}${i}`}\n          octave={octaveContext.octave}\n          note={octaveContext.formatKeyOctave(k.key, i)}\n          keyboardKey={k.keyboardKey}\n          color={k.color}\n          style={k.style}\n        ></Key>\n      ))}\n    </div>\n  );\n};\n\nexport default Keyboard;\n","// @ts-ignore\nimport Tone from 'tone';\n\nexport const AxelF = [\n  // 1st Measure\n  {\n    time: Tone.Time('0:0:0'),\n    note: 'D3',\n    dur: '4n'\n  },\n  {\n    time: Tone.Time('0:1:0'),\n    note: 'F3',\n    dur: '8n.'\n  },\n  {\n    time: Tone.Time('0:1:3'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:2:1'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('0:2:2'),\n    note: 'G3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:3:0'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('0:3:2'),\n    note: 'C3',\n    dur: '8n'\n  },\n  // 2nd Measure\n  {\n    time: Tone.Time('1:0:0'),\n    note: 'D3',\n    dur: '4n'\n  },\n  {\n    time: Tone.Time('1:1:0'),\n    note: 'A3',\n    dur: '8n.'\n  },\n  {\n    time: Tone.Time('1:1:3'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:2:1'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('1:2:2'),\n    note: 'Bb3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:3:0'),\n    note: 'A3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('1:3:2'),\n    note: 'F3',\n    dur: '8n'\n  },\n  // 3rd Measure\n  {\n    time: Tone.Time('2:0:0'),\n    note: 'D3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:0:2'),\n    note: 'A3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:1:0'),\n    note: 'D4',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:1:2'),\n    note: 'D3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('2:1:3'),\n    note: 'C3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:2:1'),\n    note: 'C3',\n    dur: '16n'\n  },\n  {\n    time: Tone.Time('2:2:2'),\n    note: 'A2',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:3:0'),\n    note: 'E3',\n    dur: '8n'\n  },\n  {\n    time: Tone.Time('2:3:2'),\n    note: 'D3',\n    dur: '0:2:2'\n  }\n];\n\nexport default AxelF;\n","import React, { FC, useContext, useEffect, useState } from 'react';\nimport { CaptureContext, ICaptureContext } from '../../contexts/capture-context';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faCircle, faStop, faBan } from '@fortawesome/free-solid-svg-icons';\n// @ts-ignore\nimport Tone from 'tone';\nimport AxelF from './axel-f';\nimport './styles.css';\n\nexport interface IPlayBackControls {}\n\nconst PlayBackControls: FC<IPlayBackControls> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n  const [isPlaying, setIsPlaying] = useState();\n  const [part, setPart] = useState();\n  const [playback, setPlayback] = useState(AxelF as any);\n  const [lastNote, setLastNote] = useState();\n  const [synth] = useState(new Tone.Synth().toMaster());\n\n  useEffect(() => {\n    const playbackNotes = captureContext.playbackNotes;\n\n    if (playbackNotes.length > 0) {\n      setLastNote(playbackNotes[playbackNotes.length - 1]);\n      setPlayback(captureContext.playbackNotes);\n    } else {\n      setLastNote(AxelF[AxelF.length - 1]);\n      setPlayback(AxelF);\n    }\n  }, [captureContext.playbackNotes]);\n\n  useEffect(() => {\n    if (part && part.length > 0) {\n      part.start(0);\n\n      Tone.Transport.scheduleOnce(function(time: any) {\n        part.removeAll();\n        Tone.Transport.toggle();\n        setIsPlaying(false);\n      }, Tone.Time(lastNote.time).toSeconds() + Tone.Time(lastNote.dur).toSeconds());\n\n      Tone.Transport.toggle();\n      setIsPlaying(true);\n    }\n  }, [part, lastNote]);\n\n  const handlePlayClick = () => {\n    setPart(\n      new Tone.Part(function(time: any, event: any) {\n        synth.triggerAttackRelease(event.note, event.dur, time);\n      }, playback)\n    );\n  };\n\n  const handleStopClick = () => {\n    part.removeAll();\n    Tone.Transport.toggle();\n    setIsPlaying(false);\n  };\n\n  const handleClearPlaybackData = () => {\n    captureContext.clearCaptureData();\n    if (part && part.length > 0) {\n      part.removeAll();\n    }\n  };\n\n  return (\n    <div className=\"controls\">\n      <div>\n        {isPlaying ? (\n          <div onClick={handleStopClick} title=\"stop\">\n            <FontAwesomeIcon size=\"lg\" icon={faStop} />\n          </div>\n        ) : (\n          <div onClick={handlePlayClick} title=\"play\">\n            <FontAwesomeIcon size=\"lg\" icon={faPlay} />\n          </div>\n        )}\n      </div>\n      {/* <div className=\"record\" title=\"record\">\n        <FontAwesomeIcon size=\"lg\" color=\"red\" icon={faCircle} />\n      </div> */}\n      <div className=\"clear\" title=\"clear\" onClick={handleClearPlaybackData}>\n        <FontAwesomeIcon size=\"lg\" icon={faBan} />\n      </div>\n    </div>\n  );\n};\n\nexport default PlayBackControls;\n","import React, { FC, useContext } from 'react';\nimport { CaptureContext, ICaptureContext } from '../../contexts/capture-context';\nimport './styles.css';\n\nexport interface IPlayBackDisplay {}\n\nconst PlayBackDisplay: FC<IPlayBackDisplay> = props => {\n  const captureContext: ICaptureContext = useContext(CaptureContext);\n\n  return (\n    <div className=\"play-back-display\">\n      <div className=\"header\">\n        <span className=\"note-header\">Note</span>\n        <span className=\"duration-header\">Duration</span>\n        <span className=\"time-header\">Time</span>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"scroll-container\">\n          {captureContext.playbackNotes.map((pbn, i) => (\n            <div key={`note-${pbn.note}-${i}`} className=\"data\">\n              <span className=\"note-data\">{pbn.note}</span>\n              <span className=\"duration-data\">{pbn.dur}</span>\n              <span className=\"time-data\">{pbn.time}</span>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayBackDisplay;\n","import React, { FC, useContext, useState } from 'react';\nimport { OctaveContext, IOctaveContext } from '../../contexts/octave-context';\n// @ts-ignore\nimport InputNumber from 'rc-input-number';\nimport 'rc-input-number/assets/index.css';\nimport './styles.css';\n\nconst OctaveControl: FC<{}> = props => {\n  const octaveContext: IOctaveContext = useContext(OctaveContext);\n  const [octave, setOctave] = useState(4);\n\n  const handleOctaveChange = (octave: number) => {\n    if (Number(octave)) {\n      setOctave(octave);\n      octaveContext.setOctave(octave);\n    } else {\n      setOctave(parseInt(octave.toString(), 10));\n    }\n  };\n\n  return (\n    <div className=\"set-octave\">\n      <label>Octave</label>\n      <InputNumber defaultValue={4} min={1} max={6} value={octave} onChange={handleOctaveChange} required={true} />\n    </div>\n  );\n};\n\nexport default OctaveControl;\n","import React from 'react';\nimport Keyboard from './components/keyboard';\nimport PlayBackControls from './components/play-back-controls';\nimport PlaybackDisplay from './components/play-back-display';\nimport { CaptureProvider } from './contexts/capture-context';\nimport { OctaveProvider } from './contexts/octave-context';\nimport OctaveControl from './components/octave-control';\nimport './App.css';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <OctaveProvider>\n        <CaptureProvider>\n          <Keyboard />\n          <div className=\"playback-container\">\n            <PlaybackDisplay />\n            <PlayBackControls />\n            <OctaveControl />\n          </div>\n        </CaptureProvider>\n      </OctaveProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}